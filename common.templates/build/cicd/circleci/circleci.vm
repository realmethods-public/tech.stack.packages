########################################################################
## circleci common references
########################################################################
#macro( cacheReferences)

working_directory: &working_directory
  /home/circleci/gitRoot/

repo_cache_key: &repo_cache_key
  v1-repo-{{ .Branch }}-{{ .Revision }}

# Step to restore repository from cache
restore_repo: &restore_repo
  restore_cache:
    key: *repo_cache_key

save_repo: &save_repo
  save_cache:
    key: *repo_cache_key
    paths:
        - *working_directory
#end##macro( cacheReferences )

########################################################################
## circleci docker image
########################################################################
#macro( dockerImageDeclaration )
#set( $dockerUserName = ${aib.getParam("terraform.docker-username")} ) 
#set( $dockerPassword = ${aib.getParam("terraform.docker-password")} )
#set( $dockerOrgName = ${aib.getParam("terraform.docker-org-name")} )
#set( $dockerRepo = ${aib.getParam("terraform.docker-repo")} )
#set( $dockerTag = ${aib.getParam("terraform.docker-tag")} )
  docker_build:
    # assign the working directory
    working_directory: *working_directory

    docker: # run the steps with Docker
      - image: circleci/python:3.7  
      
    steps:
      - *restore_repo
      - setup_remote_docker
      - run:
          name: creating docker image requiring project env vars DOCKER_USER and DOCKER_PASS
          command: |
            docker login --username ${dockerUserName} --password ${dockerPassword}
            docker build -t ${dockerOrgName}/${dockerRepo}:${dockerTag} .
            docker push ${dockerOrgName}/${dockerRepo}:${dockerTag}

#end##macro( dockerImage )