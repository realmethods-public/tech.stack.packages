#if( ${containerObject} )
#set( $appName = "Container-${containerObject.getName()}" )
#else
#set( $appName = $aib.getApplicationNameFormatted() )
#end
version: 2.1

references:
#cacheReferences()
#terraformReferences()

jobs: 

  # core job
  build_test_project:

    # assign the working directory
    working_directory: *working_directory
        
    # run the steps with Docker as the primary container
    # job commands run in this container
    # CircleCI Node.js image
    # mongodb image - runs in a common network where ports exposed
    #          on the primary container are available on localhost
    docker:
      - image: circleci/node:8.12.0-jessie
      - image: mongo:4.0.5
        command: [mongod, --smallfiles]

    # steps that comprise the `build-env` job
    steps:

      # check out source code to working directory
      - checkout

      # restore the saved cache after the first run or if `pom.xml` has changed
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - *restore_repo

# install the Angular CLI
     # install the Angular CLI
      - run: 'sudo npm install -g @angular/cli'

      # create an appRoot directory to install into 
      - run: mkdir /home/circleci/appRoot

      # create a new Angular project shell
      - run: cd /home/circleci/appRoot && ng new ${appName} --defaults

      # copy the application files from the working directory
      - run: cp -r -n /home/circleci/appRoot/${appName}/ /home/circleci/gitRoot/

      # setup the application, copies generated app files to the project directory
      - run: cd /home/circleci/gitRoot/${appName} && npm install --prod && npm run setup

      # perform the build into a directory called angular under the dist directory
      - run: cd /home/circleci/gitRoot/${appName} && ng build #--base-href /${appName}/
      
#if ( ${aib.getParam('jfrog.inUse')} == "true" || ${aib.getParam('nexus.inUse')} == "true" )
      # deploy to target repo
      - run: npm run deploy
#end      

      # cache the entire project since it covers the npm_modules
      # and the files created during ng new
      - *save_repo
      
#dockerImageDeclaration()
#terraformJobDefinition()

# simple workflow to build out the environment
workflows:
  version: 2
  build_test_deploy_workflow:
    jobs:
      - build_test_project
#terraformJobDeclaration()