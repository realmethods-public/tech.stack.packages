########################################################################
## GitLab_Service_Declarations
########################################################################
#macro( GitLab_Service_Declarations )
services:
- mongo
#end##macro( GitLab_Service_Declarations()

########################################################################
## GitLab_Variable_Declarations
########################################################################
#macro( GitLab_Variable_Declarations )
variables:
  DEFAULT_HOST_ADDRESS: "mongo"
  DEFAULT_HOST_PORT: "27017"
#end##macro( GitLab_Variable_Declarations()

########################################################################
## GitLab_StageDeclarations
########################################################################
#macro( GitLab_Stage_Declarations )
stages:
  - build
#end##macro( GitLab_Stage_Declarations )

########################################################################
## GitLab_Before_Script
########################################################################
#macro( GitLab_Before_Script )
#if ( ${aib.getParam('artifact-repo.inUse')} == "true" )
    - npm run deploy
#end     
#end##macro( GitLab_Before_Script )

########################################################################
## GitLab_After_Script
########################################################################
#macro( GitLab_After_Script )
#end##macro( GitLab_After_Script )

########################################################################
## GitLab_Stage_Definitions
########################################################################
#macro( GitLab_Stage_Definitions )
build:
  stage: build
  script: 
  # using maven to first package then to deploy the generated Lambda functions.  
  # You must assign the key vars (USER_AWS_ACCESSKEY and USER_AWS_SECRETKEY) as env vars for the current project.
    - mvn package lambda:delete-lambda lambda:deploy-lambda -DAWS_ACCESSKEY=$USER_AWS_ACCESSKEY -DAWS_SECRETKEY=$USER_AWS_SECRETKEY
#end##macro( GitLab_Stage_Definitions )

