########################################################################
## CircleCI Docker Image Output
########################################################################
#macro( CircleCI_OutputDockerImageDecl )        
    # CircleCI Java8 image, installs Apache Maven
    # mongo:4.0.5, run in a common network where ports exposed on 
    #      the primary container are available on localhost.
    docker:
      - image: circleci/openjdk:8-jdk-browsers
      - image: mongo:4.0.5
        command: [mongod, --smallfiles]
#end##macro( CircleCI_OutputDockerImageDecl )

########################################################################
## CircleCI Run Commands
########################################################################
#macro( CircleCI_RunCommands )
      # user maven to first package then deploy the generated
      # Lambda functions.  The key vars (USER_AWS_ACCESSKEY and USER_AWS_SECRETKEY) are
      # read in as env vars for the current project.
      # Learn how to add these env vars at https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
#if( ${aib.getParam("terraform.inUse")} == "true" )
      - run: 
          name: Package application
          command: mvn package
#else
      - run: 
          name: Deploy AWS Lambda functions
          command: mvn package lambda:delete-lambda lambda:deploy-lambda -DAWS_ACCESSKEY=$USER_AWS_ACCESSKEY -DAWS_SECRETKEY=$USER_AWS_SECRETKEY
#end##if( ${aib.getParam("terraform.inUse")} == "true" )

     # cache Maven dependencies using checksum of pom.xml as the cache-key
      - *save_repo

      # save the results from the testing that occurred during
      # the maven packaging in the prior step
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

#end###macro( CircleCI_RunCommands )

########################################################################
## terraform job declaration macro
########################################################################
#macro( CircleCI_TerraformJobDeclaration )
#if( ${aib.getParam("terraform.inUse")} == "true" )
      - terraform:
          requires:
            - build_test_project
#end
#end##macro( terraformJobDeclaration )