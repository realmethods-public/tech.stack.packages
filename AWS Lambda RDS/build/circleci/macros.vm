########################################################################
## CircleCI Run Commands
########################################################################
#macro( CircleCI_RunCommands )
      # user maven to first package then deploy the generated
      # Lambda functions.  The key vars (USER_AWS_ACCESSKEY and USER_AWS_SECRETKEY) are
      # read in as env vars for the current project.
      # Learn how to add these env vars at https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
          # gets the project dependencies and tests using JUnit
          - run: 
              name: Run test using JUnit
              command: mvn dependency:go-offline package -f pom-restful-api.xml
              environment:
                  DATABASE_USERNAME: root
                  DATABASE_PASSWORD: ''
                  DATABASE_DIALECT: org.hibernate.dialect.MySQL8Dialect
                  DATABASE_DRIVER: com.mysql.cj.jdbc.Driver

          # using maven to first package then deploy the generated 
          # Lambda functions.  The key vars (USER_AWS_ACCESSKEY and USER_AWS_SECRETKEY) are 
          # read in as env vars for the current project. 
          # Learn how to add these env vars at https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project
#if( ${aib.getParam("terraform.inUse")} == "true" )
          - run: 
              name: Package application without deploying
              command: mvn package -f pom-aws-lambda.xml
#else          
          - run: 
              name: Package and deploy AWS Lambda functions
              command: mvn package lambda:delete-lambda lambda:deploy-lambda -f pom-aws-lambda.xml  -DAWS_ACCESSKEY=$USER_AWS_ACCESSKEY -DAWS_SECRETKEY=$USER_AWS_SECRETKEY # deploy the lambda functions 
#end##if( ${aib.getParam("terraform.inUse")} == "true" )
         # save the results from the testing that occurred during
          # the maven packaging in the prior step
          - run:
              name: Save test results
              command: |
                  mkdir -p ~/test-results/junit/
                  find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
              when: always      
#end###macro( CircleCI_RunCommands )

########################################################################
## CircleCI Store Test Results
########################################################################
#macro( CircleCI_StoreTestResults )
#end###macro( CircleCI_StoreTestResults )

########################################################################
## CircleCI Store Artifact
########################################################################
#macro( CircleCI_StoreArtifacts )
#end###macro( CircleCI_StoreArtifacts )
